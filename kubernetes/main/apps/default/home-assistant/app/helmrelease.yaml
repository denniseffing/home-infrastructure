apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: home-assistant
spec:
  chart:
    spec:
      chart: home-assistant
      sourceRef:
        kind: HelmRepository
        name: home-assistant
        namespace: flux-system
      version: 0.2.119
  dependsOn:
    - name: kube-prometheus-stack-crds
      namespace: monitoring
    - name: longhorn
      namespace: longhorn
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    timeout: 1m
    remediation:
      strategy: rollback
      retries: 3
  interval: 5m
  values:
    additionalMounts:
      - name: bluetooth
        mountPath: /var/run/dbus
      - name: gitops-config
        mountPath: /config/gitops
      - name: config-cache
        mountPath: /config/.venv
      - name: config-logs
        mountPath: /config/logs
      - name: config-tts
        mountPath: /config/tts
      - name: tmp
        mountPath: /tmp
    additionalVolumes:
      - name: bluetooth
        hostPath:
          path: /var/run/dbus
      - name: gitops-config
        configMap:
          name: home-assistant-gitops-config
      - name: config-cache
        persistentVolumeClaim:
          claimName: home-assistant-cache
      - name: config-logs
        emptyDir: {}
      - name: config-tts
        emptyDir: {}
      - name: tmp
        emptyDir: {}
    addons:
      codeserver:
        enabled: false
        ingress:
          annotations:
            cert-manager.io/cluster-issuer: letsencrypt-prod
            nginx.ingress.kubernetes.io/auth-url: "http://oauth2-proxy.nginx-ingress.svc.cluster.local/oauth2/auth"
            nginx.ingress.kubernetes.io/auth-signin: "https://oauth2-proxy.internal.denniseffing.de/oauth2/start?rd=https://$host$uri"
          className: nginx-internal
          enabled: true
          hosts:
            - host: home-config.internal.denniseffing.de
              paths:
                - path: /
                  pathType: Prefix
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: kubernetes.io/hostname
                  operator: In
                  values:
                    - ross
                    - monica
    configuration:
      enabled: true
      forceInit: true
      initContainer:
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 1000
          runAsGroup: 1000
        volumeMounts:
          - name: init-volume
            mountPath: /mnt/init/init.sh
            subPath: init.sh
          - name: config-volume
            mountPath: /config-templates
          - name: tmp
            mountPath: /tmp
      trusted_proxies:
        - 192.168.178.0/24
        - 10.0.0.0/16
      templateConfig: |-
        # Loads default set of integrations. Do not remove.
        default_config:

        {{- if .Values.ingress.enabled }}
        http:
          use_x_forwarded_for: true
          trusted_proxies:
            {{- range .Values.configuration.trusted_proxies }}
            - {{ . }}
            {{- end }}
        {{- end}}
        # Load frontend themes from the themes folder
        frontend:
          themes: !include_dir_merge_named themes

        automation: !include automations.yaml
        script: !include scripts.yaml
        scene: !include scenes.yaml
        group: !include gitops/groups.yaml # matches mount path of gitops-config config map
        
        automation gitops: !include gitops/automations.yaml # matches mount path of gitops-config config map
    dnsPolicy: ClusterFirstWithHostNet
    hostNetwork: true
    image:
      repository: ghcr.io/denniseffing/home-assistant
      tag: 2025.4.4
    ingress:
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
      className: nginx-internal
      enabled: true
      hosts:
        - host: home.internal.denniseffing.de
          paths:
            - path: /
              pathType: Prefix
    persistence:
      accessMode: ReadWriteOnce
      enabled: true
      size: 20Gi
      storageClass: longhorn
    podSecurityContext:
      runAsNonRoot: true
      runAsUser: 1000
      runAsGroup: 1000
      fsGroup: 1000
      fsGroupChangePolicy: OnRootMismatch
    securityContext:
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
    serviceMonitor:
      enabled: false
