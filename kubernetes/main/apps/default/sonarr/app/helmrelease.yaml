apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: sonarr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: longhorn
      namespace: longhorn
  values:
    controllers:
      sonarr:
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/sonarr
              tag: 4.0.15.2940@sha256:ca6c735014bdfb04ce043bf1323a068ab1d1228eea5bab8305ca0722df7baf78
            env:
              SONARR__APP__INSTANCENAME: Sonarr
              SONARR__APP__THEME: dark
              SONARR__AUTH__METHOD: External
              SONARR__AUTH__REQUIRED: DisabledForLocalAddresses
              SONARR__LOG__DBENABLED: "False"
              SONARR__LOG__LEVEL: info
              SONARR__SERVER__PORT: &port 80
              SONARR__UPDATE__BRANCH: develop
              TZ: Europe/Berlin
            envFrom:
              - secretRef:
                  name: sonarr
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 25m
                memory: 260Mi
              limits:
                memory: 260Mi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
    defaultPodOptions:
      nodeSelector:
        kubernetes.io/hostname: rachel
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
      tolerations:
        - key: nas
          operator: Equal
          value: "true"
          effect: NoSchedule
    service:
      app:
        controller: sonarr
        ports:
          http:
            port: *port
    ingress:
      app:
        className: nginx-internal
        hosts:
          - host: "sonarr.internal.denniseffing.de"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        existingClaim: sonarr-config
      cache:
        existingClaim: sonarr-cache
        globalMounts:
          - path: /config/MediaCover
      scripts:
        type: configMap
        name: sonarr-configmap
        defaultMode: 0775
        globalMounts:
          - path: /scripts/codec-tagger.sh
            subPath: codec-tagger.sh
            readOnly: true
      tmp:
        type: emptyDir
      media:
        type: hostPath
        hostPath: /mnt/storage-2/plex
        globalMounts:
          - path: /media
      media-1:
        type: hostPath
        hostPath: /mnt/storage-1/plex
        globalMounts:
          - path: /media-1
      media-2:
        type: hostPath
        hostPath: /mnt/storage-2/plex
        globalMounts:
          - path: /media-2
