apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: plex-media-server
spec:
  chart:
    spec:
      chart: plex-media-server
      sourceRef:
        kind: HelmRepository
        name: plex
        namespace: flux-system
      version: 1.1.0
  driftDetection:
    mode: enabled
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  interval: 5m
  values:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: kubernetes.io/hostname
                  operator: In
                  values:
                    - rachel
    image:
      repository: plexinc/pms-docker
      tag: 1.41.9.9961-46083195d
    ingress:
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
      enabled: true
      ingressClassName: nginx-external
      url: https://plex.denniseffing.de
    initContainer:
      script: |-
        #!/bin/sh
        echo "waiting for pre-existing pms database to uploaded..."

        if [ -d "/config/Library" ]; then
          echo "PMS library already exists, exiting."
          exit 0
        fi

        # wait for the database archive to be manually copied to the server
        while [ ! -f /pms.tgz ]; do sleep 2; done;

        tar -xvzf /pms.tgz -C /config
        rm pms.tgz

        echo "Done."
    extraVolumes:
      - name: storage-1
        persistentVolumeClaim:
          claimName: plex-storage-1
      - name: storage-2
        persistentVolumeClaim:
          claimName: plex-storage-2
    extraVolumeMounts:
      - name: storage-1
        mountPath: "/mnt/storage-1"
      - name: storage-2
        mountPath: "/mnt/storage-2"
    pms:
      configStorage: 100Gi
      storageClassName: longhorn
    tolerations:
      - key: nas
        operator: Equal
        value: "true"
        effect: NoSchedule
