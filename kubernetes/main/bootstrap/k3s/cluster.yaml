---
- name: Configure NFS share on rachel
  hosts: rachel
  become: true
  tasks:
    - name: Install NFS server
      package:
        name: nfs-utils
        state: present
    - name: Create NFS root
      file:
        path: "{{ item }}"
        state: directory
        mode: "0755"
      loop:
        - /nfs/storage-1
        - /nfs/storage-2
    - name: Configure bind mounts
      mount:
        src: "{{ item.source }}"
        path: "{{ item.destination }}"
        fstype: none
        opts: bind
        state: mounted
      loop:
        - { source: /mnt/storage-1, destination: /nfs/storage-1 }
        - { source: /mnt/storage-2, destination: /nfs/storage-2 }
    - name: Export NFS shares
      lineinfile:
        path: /etc/exports
        line: "{{ item }} 192.168.0.0/16(rw,sync,no_subtree_check)"
        create: yes
      loop:
        - /nfs/storage-1
        - /nfs/storage-2
      notify:
        - Restart NFS server
  handlers:
    - name: Restart NFS server
      service:
        name: nfs-server
        state: restarted
        enabled: true
- name: Configure DNS
  hosts: k3s_cluster
  become: true
  tasks:
    - name: Configure DNS server
      community.general.nmcli:
        conn_name: "Wired connection 1"
        type: ethernet
        ifname: eth0
        dns4:
          - 1.1.1.1
        state: present
      notify:
        - Restart NetworkManager
  handlers:
    - name: Restart NetworkManager
      ansible.builtin.systemd:
        name: NetworkManager
        state: restarted
- name: Prepare nodes for longhorn
  hosts: k3s_cluster
  become: true
  vars:
    longhorn_arch: "{{ 'amd64' if ansible_architecture == 'x86_64' else 'arm64' }}"
  tasks:
    - name: Enable dm_crypt kernel module
      modprobe:
        name: dm_crypt
        state: present
        persistent: present
    - name: Install packages required by Longhorn
      package:
        name:
          - open-iscsi
          - cryptsetup
        state: present
    - name: Start services required by Longhorn
      service:
        name: iscsid
        enabled: true
        state: started
- name: Prepare nodes for matter-controller
  hosts: k3s_cluster
  become: true
  tasks:
    - name: Configure IPv6 prerequisites for Matter Controller
      sysctl:
        name: '{{ item.key }}'
        value: '{{ item.value }}'
        reload: true
        state: present
      with_dict:
        net.ipv6.conf.all.forwarding: 0
        net.ipv6.conf.eth0.accept_ra: 1
        net.ipv6.conf.eth0.accept_ra_rt_info_max_plen: 64
- name: Set up k3s cluster
  hosts: k3s_cluster
  vars:
    k3s_become: true
    k3s_etcd_datastore: true
    k3s_state: installed
    k3s_registration_address: 192.168.178.40
    k3s_release_version: v1.31.5+k3s1
    k3s_server_manifests_templates:
      - manifests/kube-vip.yaml
      - manifests/kube-vip-cloud-controller.yaml
    k3s_server:
      cluster-cidr: 10.52.0.0/16
      flannel-backend: "none"
      disable-network-policy: true
      disable:
        - traefik
        - servicelb
      tls-san: 192.168.178.40
  roles:
    - role: xanmanning.k3s
      vars:
        k3s_cgroup_subsys: []
