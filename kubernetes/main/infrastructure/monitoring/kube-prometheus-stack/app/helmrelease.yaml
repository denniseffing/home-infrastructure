apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
spec:
  interval: 5m
  releaseName: kube-prometheus-stack
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 67.8.0
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
  dependsOn:
    - name: kube-prometheus-stack-crds
      namespace: monitoring
  install:
    crds: Skip
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    crds: Skip
    remediation:
      strategy: rollback
      retries: 3
  values:
    crds:
      enabled: false
    alertmanager:
      ingress:
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-prod
          nginx.ingress.kubernetes.io/auth-url: "http://oauth2-proxy.nginx-ingress.svc.cluster.local/oauth2/auth"
          nginx.ingress.kubernetes.io/auth-signin: "https://oauth2-proxy.internal.denniseffing.de/oauth2/start?rd=https://$host$uri"
        enabled: true
        hosts:
          - alertmanager.internal.denniseffing.de
        tls:
          - hosts:
              - alertmanager.internal.denniseffing.de
            secretName: alertmanager-ingress-tls
    grafana:
      extraSecretMounts:
        - name: grafana-github-auth-secret-mount
          secretName: grafana-github-auth-secret
          defaultMode: 0440
          mountPath: /etc/secrets/auth_github
          readOnly: true
      grafana.ini:
        auth:
          disable_login_form: true
        auth.github:
          enabled: true
          client_id: "$__file{/etc/secrets/auth_github/client_id}"
          client_secret: "$__file{/etc/secrets/auth_github/client_secret}"
          allow_assign_grafana_admin: true
          role_attribute_path: "[login=='denniseffing'][0] && 'GrafanaAdmin' || [login=='feltenj'][0] && 'Admin'"
          role_attribute_strict: true
        server:
          root_url: "https://%(domain)s"
      ingress:
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-prod
        enabled: true
        hosts:
          - grafana.internal.denniseffing.de
        tls:
          - hosts:
              - grafana.internal.denniseffing.de
            secretName: grafana-ingress-tls
    prometheus:
      ingress:
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-prod
          nginx.ingress.kubernetes.io/auth-url: "http://oauth2-proxy.nginx-ingress.svc.cluster.local/oauth2/auth"
          nginx.ingress.kubernetes.io/auth-signin: "https://oauth2-proxy.internal.denniseffing.de/oauth2/start?rd=https://$host$uri"
        enabled: true
        hosts:
          - prometheus.internal.denniseffing.de
        tls:
          - hosts:
              - prometheus.internal.denniseffing.de
            secretName: prometheus-ingress-tls
      prometheusSpec:
        retention: 10d
        retentionSize: 7.5GiB
        serviceMonitorSelectorNilUsesHelmValues: false
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: local-path
              accessModes:
                - ReadWriteOnce
              resources:
                requests:
                  storage: 10Gi
