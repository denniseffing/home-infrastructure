---
# Source: onechart/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: capacitor
  namespace: flux-system
  labels:
    app.kubernetes.io/name: capacitor
    app.kubernetes.io/instance: capacitor
spec:
  type: ClusterIP
  ports:
    - port: 9000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: capacitor
    app.kubernetes.io/instance: capacitor
---
# Source: onechart/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: capacitor
  namespace: flux-system
  labels:
    app.kubernetes.io/name: capacitor
    app.kubernetes.io/instance: capacitor
  annotations:
    kubectl.kubernetes.io/default-container: capacitor
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: capacitor
      app.kubernetes.io/instance: capacitor
  template:
    metadata:
      annotations:
        checksum/config: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
      labels:
        app.kubernetes.io/name: capacitor
        app.kubernetes.io/instance: capacitor
    spec:
      containers:
        - image: ghcr.io/gimlet-io/capacitor:v0.4.8
          imagePullPolicy: IfNotPresent
          name: capacitor
          ports:
            - containerPort: 9000
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            requests:
              cpu: 200m
              memory: 200Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 101
            runAsNonRoot: true
            runAsUser: 100
            seccompProfile:
              type: RuntimeDefault
      securityContext:
        fsGroup: 999
      serviceAccountName: capacitor
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: capacitor
    app.kubernetes.io/instance: capacitor
  name: capacitor
  namespace: flux-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: capacitor
    app.kubernetes.io/instance: capacitor
  name: capacitor
rules:
  - apiGroups:
      - networking.k8s.io
      - apps
      - ""
    resources:
      - pods
      - pods/log
      - ingresses
      - deployments
      - services
      - secrets
      - events
      - configmaps
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - source.toolkit.fluxcd.io
      - kustomize.toolkit.fluxcd.io
      - helm.toolkit.fluxcd.io
      - infra.contrib.fluxcd.io
    resources:
      - gitrepositories
      - ocirepositories
      - buckets
      - helmrepositories
      - helmcharts
      - kustomizations
      - helmreleases
      - terraforms
    verbs:
      - get
      - watch
      - list
      - patch # to allow force reconciling by adding an annotation
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: capacitor
    app.kubernetes.io/instance: capacitor
  name: capacitor
subjects:
  - kind: ServiceAccount
    name: capacitor
    namespace: flux-system
roleRef:
  kind: ClusterRole
  name: capacitor
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/auth-url: "http://oauth2-proxy.oauth2-proxy.svc.cluster.local/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://oauth2-proxy.internal.denniseffing.de/oauth2/start?rd=https://$host$uri"
  labels:
    app.kubernetes.io/name: capacitor
    app.kubernetes.io/instance: capacitor
  name: capacitor-ingress
  namespace: flux-system
spec:
  rules:
    - host: capacitor.internal.denniseffing.de
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: capacitor
                port:
                  number: 9000
  tls:
    - hosts:
        - capacitor.internal.denniseffing.de
      secretName: capacitor-tls
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    app.kubernetes.io/name: capacitor
    app.kubernetes.io/instance: capacitor
  name: allow-capacitor-ingress
  namespace: flux-system
spec:
  policyTypes:
    - Ingress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: nginx-ingress
  podSelector:
    matchLabels:
      app.kubernetes.io/name: capacitor
      app.kubernetes.io/instance: capacitor
